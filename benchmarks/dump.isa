	.text
	.hsa_code_object_version 2,1
	.hsa_code_object_isa 8,0,3,"AMD","AMDGPU"
	.section	.note,#alloc
	.long	4
	.long	.Ltmp1-.Ltmp0
	.long	7
	.asciz	"AMD"
	.p2align	2
.Ltmp0:
	.byte	1
	.short	256
.Ltmp1:
	.p2align	2
	.text
	.section	.AMDGPU.config
	.text
	.globl	ZZ16ihipMemsetKernelIcEN2hc17completion_futureEP12ihipStream_tR14LockedAccessorI24ihipStreamCriticalBase_tINSt3__15mutexEEEPT_SB_mENUlNS0_11tiled_indexILi1EEEE_19__cxxamp_trampolineEmPcc
	.p2align	8
	.type	ZZ16ihipMemsetKernelIcEN2hc17completion_futureEP12ihipStream_tR14LockedAccessorI24ihipStreamCriticalBase_tINSt3__15mutexEEEPT_SB_mENUlNS0_11tiled_indexILi1EEEE_19__cxxamp_trampolineEmPcc,@function
	.amdgpu_hsa_kernel ZZ16ihipMemsetKernelIcEN2hc17completion_futureEP12ihipStream_tR14LockedAccessorI24ihipStreamCriticalBase_tINSt3__15mutexEEEPT_SB_mENUlNS0_11tiled_indexILi1EEEE_19__cxxamp_trampolineEmPcc
ZZ16ihipMemsetKernelIcEN2hc17completion_futureEP12ihipStream_tR14LockedAccessorI24ihipStreamCriticalBase_tINSt3__15mutexEEEPT_SB_mENUlNS0_11tiled_indexILi1EEEE_19__cxxamp_trampolineEmPcc: ; @ZZ16ihipMemsetKernelIcEN2hc17completion_futureEP12ihipStream_tR14LockedAccessorI24ihipStreamCriticalBase_tINSt3__15mutexEEEPT_SB_mENUlNS0_11tiled_indexILi1EEEE_19__cxxamp_trampolineEmPcc
	.amd_kernel_code_t
		amd_code_version_major = 1
		amd_code_version_minor = 0
		amd_machine_kind = 1
		amd_machine_version_major = 8
		amd_machine_version_minor = 0
		amd_machine_version_stepping = 3
		kernel_code_entry_byte_offset = 256
		kernel_code_prefetch_byte_size = 0
		max_scratch_backing_memory_byte_size = 0
		granulated_workitem_vgpr_count = 2
		granulated_wavefront_sgpr_count = 2
		priority = 0
		float_mode = 192
		priv = 0
		enable_dx10_clamp = 1
		debug_mode = 0
		enable_ieee_mode = 1
		enable_sgpr_private_segment_wave_byte_offset = 0
		user_sgpr_count = 8
		enable_sgpr_workgroup_id_x = 1
		enable_sgpr_workgroup_id_y = 0
		enable_sgpr_workgroup_id_z = 0
		enable_sgpr_workgroup_info = 0
		enable_vgpr_workitem_id = 0
		enable_exception_msb = 0
		granulated_lds_size = 0
		enable_exception = 0
		enable_sgpr_private_segment_buffer = 1
		enable_sgpr_dispatch_ptr = 1
		enable_sgpr_queue_ptr = 0
		enable_sgpr_kernarg_segment_ptr = 1
		enable_sgpr_dispatch_id = 0
		enable_sgpr_flat_scratch_init = 0
		enable_sgpr_private_segment_size = 0
		enable_sgpr_grid_workgroup_count_x = 0
		enable_sgpr_grid_workgroup_count_y = 0
		enable_sgpr_grid_workgroup_count_z = 0
		enable_ordered_append_gds = 0
		private_element_size = 1
		is_ptr64 = 1
		is_dynamic_callstack = 0
		is_debug_enabled = 0
		is_xnack_enabled = 0
		workitem_private_segment_byte_size = 0
		workgroup_group_segment_byte_size = 0
		gds_segment_byte_size = 0
		kernarg_segment_byte_size = 17
		workgroup_fbarrier_count = 0
		wavefront_sgpr_count = 19
		workitem_vgpr_count = 9
		reserved_vgpr_first = 0
		reserved_vgpr_count = 0
		reserved_sgpr_first = 0
		reserved_sgpr_count = 0
		debug_wavefront_private_segment_offset_sgpr = 0
		debug_private_segment_buffer_sgpr = 0
		kernarg_segment_alignment = 4
		group_segment_alignment = 4
		private_segment_alignment = 4
		wavefront_size = 6
		call_convention = 0
		runtime_loader_kernel_symbol = 0
	.end_amd_kernel_code_t
; BB#0:
	s_add_u32 s0, s6, 16
	s_addc_u32 s1, s7, 0
	v_mov_b32_e32 v2, s0
	v_mov_b32_e32 v3, s1
	flat_load_sbyte v2, v[2:3]
	s_load_dword s0, s[4:5], 0x4
	s_load_dwordx2 s[10:11], s[6:7], 0x0
	s_waitcnt lgkmcnt(0)
	s_and_b32 s12, s0, 0xffff
	s_mul_i32 s8, s8, s12
	v_add_i32_e32 v0, vcc, s8, v0
	v_ashrrev_i32_e32 v1, 31, v0
	v_cmp_gt_u64_e32 vcc, s[10:11], v[0:1]
	s_and_saveexec_b64 s[8:9], vcc
	s_xor_b64 s[8:9], exec, s[8:9]
	s_waitcnt vmcnt(0)
	; mask branch BB0_4
	s_cbranch_execz BB0_4
BB0_1:                                  ; %.lr.ph.i
	v_cvt_f32_u32_e32 v3, s12
	s_load_dword s2, s[4:5], 0xc
	s_nop 0
	s_load_dwordx2 s[6:7], s[6:7], 0x8
	v_rcp_iflag_f32_e32 v3, v3
	s_waitcnt lgkmcnt(0)
	s_ashr_i32 s4, s2, 31
	s_add_i32 s2, s2, s4
	v_mul_f32_e32 v3, 0x4f800000, v3
	v_cvt_u32_f32_e32 v3, v3
	s_xor_b32 s2, s2, s4
	v_mul_hi_u32 v4, v3, s12
	v_mul_lo_i32 v5, v3, s12
	v_cmp_eq_u32_e64 s[0:1], 0, v4
	v_sub_i32_e32 v4, vcc, 0, v5
	v_cndmask_b32_e64 v4, v5, v4, s[0:1]
	v_mul_hi_u32 v4, v4, v3
	v_add_i32_e32 v5, vcc, v4, v3
	v_subrev_i32_e32 v3, vcc, v4, v3
	v_cndmask_b32_e64 v3, v3, v5, s[0:1]
	v_mul_hi_u32 v3, v3, s2
	v_mul_lo_i32 v4, v3, s12
	v_add_i32_e32 v5, vcc, 1, v3
	v_add_i32_e32 v6, vcc, -1, v3
	v_cmp_ge_u32_e64 s[0:1], s2, v4
	v_sub_i32_e32 v4, vcc, s2, v4
	v_cmp_le_u32_e32 vcc, s12, v4
	v_cndmask_b32_e64 v7, 0, -1, s[0:1]
	v_cndmask_b32_e64 v8, 0, -1, vcc
	v_cmp_eq_u32_e64 s[0:1], 0, v7
	v_and_b32_e32 v7, v7, v8
	v_cmp_eq_u32_e64 s[2:3], 0, v7
	v_cndmask_b32_e64 v3, v5, v3, s[2:3]
	v_subrev_i32_e32 v5, vcc, s12, v4
	v_cndmask_b32_e64 v5, v5, v4, s[2:3]
	v_add_i32_e32 v4, vcc, s12, v4
	v_cndmask_b32_e64 v3, v3, v6, s[0:1]
	v_cndmask_b32_e64 v4, v5, v4, s[0:1]
	v_xor_b32_e32 v3, s4, v3
	v_xor_b32_e32 v4, s4, v4
	v_subrev_i32_e32 v3, vcc, s4, v3
	v_subrev_i32_e32 v4, vcc, s4, v4
	v_cmp_ne_u32_e32 vcc, 0, v4
	v_cndmask_b32_e64 v4, 0, 1, vcc
	v_add_i32_e32 v3, vcc, v4, v3
	v_mul_lo_i32 v3, s12, v3
	s_mov_b64 s[0:1], 0
	v_ashrrev_i32_e32 v4, 31, v3
BB0_2:                                  ; =>This Inner Loop Header: Depth=1
	v_add_i32_e32 v5, vcc, s6, v0
	v_mov_b32_e32 v6, s7
	v_addc_u32_e32 v6, vcc, v1, v6, vcc
	v_add_i32_e32 v0, vcc, v3, v0
	v_addc_u32_e32 v1, vcc, v1, v4, vcc
	v_cmp_le_u64_e32 vcc, s[10:11], v[0:1]
	flat_store_byte v[5:6], v2
	s_or_b64 s[0:1], vcc, s[0:1]
	s_andn2_b64 exec, exec, s[0:1]
	s_waitcnt vmcnt(0) lgkmcnt(0)
	s_cbranch_execnz BB0_2
; BB#3:                                 ; %Flow
	s_or_b64 exec, exec, s[0:1]
BB0_4:                                  ; %Flow1
	s_or_b64 exec, exec, s[8:9]
	s_endpgm
.Lfunc_end0:
	.size	ZZ16ihipMemsetKernelIcEN2hc17completion_futureEP12ihipStream_tR14LockedAccessorI24ihipStreamCriticalBase_tINSt3__15mutexEEEPT_SB_mENUlNS0_11tiled_indexILi1EEEE_19__cxxamp_trampolineEmPcc, .Lfunc_end0-ZZ16ihipMemsetKernelIcEN2hc17completion_futureEP12ihipStream_tR14LockedAccessorI24ihipStreamCriticalBase_tINSt3__15mutexEEEPT_SB_mENUlNS0_11tiled_indexILi1EEEE_19__cxxamp_trampolineEmPcc

	.section	.AMDGPU.csdata
; Kernel info:
; codeLenInByte = 424
; NumSgprs: 19
; NumVgprs: 9
; FloatMode: 192
; IeeeMode: 1
; ScratchSize: 0
; LDSByteSize: 0 bytes/workgroup (compile time only)
; SGPRBlocks: 2
; VGPRBlocks: 2
; NumSGPRsForWavesPerEU: 19
; NumVGPRsForWavesPerEU: 9
; ReservedVGPRFirst: 0
; ReservedVGPRCount: 0
; COMPUTE_PGM_RSRC2:USER_SGPR: 8
; COMPUTE_PGM_RSRC2:TGID_X_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Y_EN: 0
; COMPUTE_PGM_RSRC2:TGID_Z_EN: 0
; COMPUTE_PGM_RSRC2:TIDIG_COMP_CNT: 0
	.section	.AMDGPU.config
	.text
	.globl	ZZ16ihipMemsetKernelIjEN2hc17completion_futureEP12ihipStream_tR14LockedAccessorI24ihipStreamCriticalBase_tINSt3__15mutexEEEPT_SB_mENUlNS0_11tiled_indexILi1EEEE_19__cxxamp_trampolineEmPjj
	.p2align	8
	.type	ZZ16ihipMemsetKernelIjEN2hc17completion_futureEP12ihipStream_tR14LockedAccessorI24ihipStreamCriticalBase_tINSt3__15mutexEEEPT_SB_mENUlNS0_11tiled_indexILi1EEEE_19__cxxamp_trampolineEmPjj,@function
	.amdgpu_hsa_kernel ZZ16ihipMemsetKernelIjEN2hc17completion_futureEP12ihipStream_tR14LockedAccessorI24ihipStreamCriticalBase_tINSt3__15mutexEEEPT_SB_mENUlNS0_11tiled_indexILi1EEEE_19__cxxamp_trampolineEmPjj
ZZ16ihipMemsetKernelIjEN2hc17completion_futureEP12ihipStream_tR14LockedAccessorI24ihipStreamCriticalBase_tINSt3__15mutexEEEPT_SB_mENUlNS0_11tiled_indexILi1EEEE_19__cxxamp_trampolineEmPjj: ; @ZZ16ihipMemsetKernelIjEN2hc17completion_futureEP12ihipStream_tR14LockedAccessorI24ihipStreamCriticalBase_tINSt3__15mutexEEEPT_SB_mENUlNS0_11tiled_indexILi1EEEE_19__cxxamp_trampolineEmPjj
	.amd_kernel_code_t
		amd_code_version_major = 1
		amd_code_version_minor = 0
		amd_machine_kind = 1
		amd_machine_version_major = 8
		amd_machine_version_minor = 0
		amd_machine_version_stepping = 3
		kernel_code_entry_byte_offset = 256
		kernel_code_prefetch_byte_size = 0
		max_scratch_backing_memory_byte_size = 0
		granulated_workitem_vgpr_count = 2
		granulated_wavefront_sgpr_count = 2
		priority = 0
		float_mode = 192
		priv = 0
		enable_dx10_clamp = 1
		debug_mode = 0
		enable_ieee_mode = 1
		enable_sgpr_private_segment_wave_byte_offset = 0
		user_sgpr_count = 8
		enable_sgpr_workgroup_id_x = 1
		enable_sgpr_workgroup_id_y = 0
		enable_sgpr_workgroup_id_z = 0
		enable_sgpr_workgroup_info = 0
		enable_vgpr_workitem_id = 0
		enable_exception_msb = 0
		granulated_lds_size = 0
		enable_exception = 0
		enable_sgpr_private_segment_buffer = 1
		enable_sgpr_dispatch_ptr = 1
		enable_sgpr_queue_ptr = 0
		enable_sgpr_kernarg_segment_ptr = 1
		enable_sgpr_dispatch_id = 0
		enable_sgpr_flat_scratch_init = 0
		enable_sgpr_private_segment_size = 0
		enable_sgpr_grid_workgroup_count_x = 0
		enable_sgpr_grid_workgroup_count_y = 0
		enable_sgpr_grid_workgroup_count_z = 0
		enable_ordered_append_gds = 0
		private_element_size = 1
		is_ptr64 = 1
		is_dynamic_callstack = 0
		is_debug_enabled = 0
		is_xnack_enabled = 0
		workitem_private_segment_byte_size = 0
		workgroup_group_segment_byte_size = 0
		gds_segment_byte_size = 0
		kernarg_segment_byte_size = 20
		workgroup_fbarrier_count = 0
		wavefront_sgpr_count = 22
		workitem_vgpr_count = 9
		reserved_vgpr_first = 0
		reserved_vgpr_count = 0
		reserved_sgpr_first = 0
		reserved_sgpr_count = 0
		debug_wavefront_private_segment_offset_sgpr = 0
		debug_private_segment_buffer_sgpr = 0
		kernarg_segment_alignment = 4
		group_segment_alignment = 4
		private_segment_alignment = 4
		wavefront_size = 6
		call_convention = 0
		runtime_loader_kernel_symbol = 0
	.end_amd_kernel_code_t
; BB#0:
	s_load_dword s0, s[4:5], 0x4
	s_load_dwordx2 s[10:11], s[6:7], 0x0
	s_waitcnt lgkmcnt(0)
	s_and_b32 s12, s0, 0xffff
	s_mul_i32 s8, s8, s12
	v_add_i32_e32 v0, vcc, s8, v0
	v_ashrrev_i32_e32 v1, 31, v0
	v_cmp_gt_u64_e32 vcc, s[10:11], v[0:1]
	s_and_saveexec_b64 s[8:9], vcc
	s_xor_b64 s[8:9], exec, s[8:9]
	; mask branch BB1_4
	s_cbranch_execz BB1_4
BB1_1:                                  ; %.lr.ph.i
	v_cvt_f32_u32_e32 v2, s12
	s_load_dword s2, s[4:5], 0xc
	s_load_dwordx2 s[14:15], s[6:7], 0x8
	s_load_dword s6, s[6:7], 0x10
	v_rcp_iflag_f32_e32 v2, v2
	s_waitcnt lgkmcnt(0)
	s_ashr_i32 s4, s2, 31
	s_add_i32 s2, s2, s4
	v_mul_f32_e32 v2, 0x4f800000, v2
	v_cvt_u32_f32_e32 v2, v2
	s_xor_b32 s2, s2, s4
	v_mul_hi_u32 v3, v2, s12
	v_mul_lo_i32 v4, v2, s12
	v_cmp_eq_u32_e64 s[0:1], 0, v3
	v_sub_i32_e32 v3, vcc, 0, v4
	v_cndmask_b32_e64 v3, v4, v3, s[0:1]
	v_mul_hi_u32 v3, v3, v2
	v_add_i32_e32 v4, vcc, v3, v2
	v_subrev_i32_e32 v2, vcc, v3, v2
	v_cndmask_b32_e64 v2, v2, v4, s[0:1]
	v_mul_hi_u32 v2, v2, s2
	v_mul_lo_i32 v3, v2, s12
	v_add_i32_e32 v4, vcc, 1, v2
	v_add_i32_e32 v5, vcc, -1, v2
	v_cmp_ge_u32_e64 s[0:1], s2, v3
	v_sub_i32_e32 v3, vcc, s2, v3
	v_cmp_le_u32_e32 vcc, s12, v3
	v_cndmask_b32_e64 v6, 0, -1, s[0:1]
	v_cndmask_b32_e64 v7, 0, -1, vcc
	v_cmp_eq_u32_e64 s[0:1], 0, v6
	v_and_b32_e32 v6, v6, v7
	v_cmp_eq_u32_e64 s[2:3], 0, v6
	v_cndmask_b32_e64 v2, v4, v2, s[2:3]
	v_subrev_i32_e32 v4, vcc, s12, v3
	v_cndmask_b32_e64 v4, v4, v3, s[2:3]
	v_add_i32_e32 v3, vcc, s12, v3
	v_cndmask_b32_e64 v2, v2, v5, s[0:1]
	v_cndmask_b32_e64 v3, v4, v3, s[0:1]
	v_xor_b32_e32 v2, s4, v2
	v_xor_b32_e32 v3, s4, v3
	v_subrev_i32_e32 v2, vcc, s4, v2
	v_subrev_i32_e32 v3, vcc, s4, v3
	v_cmp_ne_u32_e32 vcc, 0, v3
	v_cndmask_b32_e64 v3, 0, 1, vcc
	v_add_i32_e32 v4, vcc, v3, v2
	v_mul_lo_i32 v3, s12, v4
	v_mul_hi_u32 v4, s12, v4
	v_lshlrev_b64 v[6:7], 2, v[0:1]
	v_add_i32_e32 v5, vcc, s14, v6
	v_mov_b32_e32 v6, s15
	v_mov_b32_e32 v2, 0
	v_addc_u32_e32 v6, vcc, v7, v6, vcc
	v_ashrrev_i32_e32 v4, 31, v3
	v_ashrrev_i64 v[7:8], 30, v[2:3]
	s_mov_b64 s[2:3], 0
BB1_2:                                  ; =>This Inner Loop Header: Depth=1
	v_add_i32_e32 v0, vcc, v3, v0
	v_addc_u32_e32 v1, vcc, v1, v4, vcc
	v_cmp_le_u64_e64 s[0:1], s[10:11], v[0:1]
	v_mov_b32_e32 v2, s6
	flat_store_dword v[5:6], v2
	s_waitcnt vmcnt(0) lgkmcnt(0)
	v_add_i32_e32 v5, vcc, v7, v5
	s_or_b64 s[2:3], s[0:1], s[2:3]
	v_addc_u32_e32 v6, vcc, v6, v8, vcc
	s_andn2_b64 exec, exec, s[2:3]
	s_cbranch_execnz BB1_2
; BB#3:                                 ; %Flow
	s_or_b64 exec, exec, s[2:3]
BB1_4:                                  ; %Flow3
	s_or_b64 exec, exec, s[8:9]
	s_endpgm
.Lfunc_end1:
	.size	ZZ16ihipMemsetKernelIjEN2hc17completion_futureEP12ihipStream_tR14LockedAccessorI24ihipStreamCriticalBase_tINSt3__15mutexEEEPT_SB_mENUlNS0_11tiled_indexILi1EEEE_19__cxxamp_trampolineEmPjj, .Lfunc_end1-ZZ16ihipMemsetKernelIjEN2hc17completion_futureEP12ihipStream_tR14LockedAccessorI24ihipStreamCriticalBase_tINSt3__15mutexEEEPT_SB_mENUlNS0_11tiled_indexILi1EEEE_19__cxxamp_trampolineEmPjj

	.section	.AMDGPU.csdata
; Kernel info:
; codeLenInByte = 444
; NumSgprs: 22
; NumVgprs: 9
; FloatMode: 192
; IeeeMode: 1
; ScratchSize: 0
; LDSByteSize: 0 bytes/workgroup (compile time only)
; SGPRBlocks: 2
; VGPRBlocks: 2
; NumSGPRsForWavesPerEU: 22
; NumVGPRsForWavesPerEU: 9
; ReservedVGPRFirst: 0
; ReservedVGPRCount: 0
; COMPUTE_PGM_RSRC2:USER_SGPR: 8
; COMPUTE_PGM_RSRC2:TGID_X_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Y_EN: 0
; COMPUTE_PGM_RSRC2:TGID_Z_EN: 0
; COMPUTE_PGM_RSRC2:TIDIG_COMP_CNT: 0
	.section	.AMDGPU.config
	.text
	.globl	ZN12_GLOBAL__N_146_Z9FuncHADD216grid_launch_parmPiS0_S0__functor19__cxxamp_trampolineEiiiiiiPKiS2_Pi
	.p2align	8
	.type	ZN12_GLOBAL__N_146_Z9FuncHADD216grid_launch_parmPiS0_S0__functor19__cxxamp_trampolineEiiiiiiPKiS2_Pi,@function
	.amdgpu_hsa_kernel ZN12_GLOBAL__N_146_Z9FuncHADD216grid_launch_parmPiS0_S0__functor19__cxxamp_trampolineEiiiiiiPKiS2_Pi
ZN12_GLOBAL__N_146_Z9FuncHADD216grid_launch_parmPiS0_S0__functor19__cxxamp_trampolineEiiiiiiPKiS2_Pi: ; @ZN12_GLOBAL__N_146_Z9FuncHADD216grid_launch_parmPiS0_S0__functor19__cxxamp_trampolineEiiiiiiPKiS2_Pi
	.amd_kernel_code_t
		amd_code_version_major = 1
		amd_code_version_minor = 0
		amd_machine_kind = 1
		amd_machine_version_major = 8
		amd_machine_version_minor = 0
		amd_machine_version_stepping = 3
		kernel_code_entry_byte_offset = 256
		kernel_code_prefetch_byte_size = 0
		max_scratch_backing_memory_byte_size = 0
		granulated_workitem_vgpr_count = 1
		granulated_wavefront_sgpr_count = 1
		priority = 0
		float_mode = 192
		priv = 0
		enable_dx10_clamp = 1
		debug_mode = 0
		enable_ieee_mode = 1
		enable_sgpr_private_segment_wave_byte_offset = 0
		user_sgpr_count = 6
		enable_sgpr_workgroup_id_x = 1
		enable_sgpr_workgroup_id_y = 0
		enable_sgpr_workgroup_id_z = 0
		enable_sgpr_workgroup_info = 0
		enable_vgpr_workitem_id = 0
		enable_exception_msb = 0
		granulated_lds_size = 0
		enable_exception = 0
		enable_sgpr_private_segment_buffer = 1
		enable_sgpr_dispatch_ptr = 0
		enable_sgpr_queue_ptr = 0
		enable_sgpr_kernarg_segment_ptr = 1
		enable_sgpr_dispatch_id = 0
		enable_sgpr_flat_scratch_init = 0
		enable_sgpr_private_segment_size = 0
		enable_sgpr_grid_workgroup_count_x = 0
		enable_sgpr_grid_workgroup_count_y = 0
		enable_sgpr_grid_workgroup_count_z = 0
		enable_ordered_append_gds = 0
		private_element_size = 1
		is_ptr64 = 1
		is_dynamic_callstack = 0
		is_debug_enabled = 0
		is_xnack_enabled = 0
		workitem_private_segment_byte_size = 0
		workgroup_group_segment_byte_size = 0
		gds_segment_byte_size = 0
		kernarg_segment_byte_size = 48
		workgroup_fbarrier_count = 0
		wavefront_sgpr_count = 12
		workitem_vgpr_count = 6
		reserved_vgpr_first = 0
		reserved_vgpr_count = 0
		reserved_sgpr_first = 0
		reserved_sgpr_count = 0
		debug_wavefront_private_segment_offset_sgpr = 0
		debug_private_segment_buffer_sgpr = 0
		kernarg_segment_alignment = 4
		group_segment_alignment = 4
		private_segment_alignment = 4
		wavefront_size = 6
		call_convention = 0
		runtime_loader_kernel_symbol = 0
	.end_amd_kernel_code_t
; BB#0:
	s_load_dwordx2 s[0:1], s[4:5], 0x18
	s_load_dwordx2 s[2:3], s[4:5], 0x20
	v_mov_b32_e32 v1, 0
	v_lshlrev_b64 v[0:1], 2, v[0:1]
	s_load_dwordx2 s[4:5], s[4:5], 0x28
	s_waitcnt lgkmcnt(0)
	v_add_i32_e32 v2, vcc, s0, v0
	v_mov_b32_e32 v3, s1
	v_addc_u32_e32 v3, vcc, v1, v3, vcc
	flat_load_dword v4, v[2:3]
	v_add_i32_e32 v2, vcc, s2, v0
	v_mov_b32_e32 v3, s3
	v_addc_u32_e32 v3, vcc, v1, v3, vcc
	flat_load_dword v3, v[2:3]
	v_add_i32_e32 v2, vcc, s4, v0
	v_mov_b32_e32 v5, s5
	s_waitcnt vmcnt(1) lgkmcnt(0)
	v_ashrrev_i32_e32 v0, 16, v4
	s_waitcnt vmcnt(0)
	;;#ASMSTART
	v_add_f16 v4, v4, v3
	;;#ASMEND
	v_ashrrev_i32_e32 v3, 16, v3
	;;#ASMSTART
	v_add_f16 v0, v0, v3
	;;#ASMEND
	v_and_b32_e32 v3, 0xffff, v4
	v_lshlrev_b32_e32 v0, 16, v0
	v_or_b32_e32 v0, v3, v0
	v_addc_u32_e32 v3, vcc, v1, v5, vcc
	flat_store_dword v[2:3], v0
	s_endpgm
.Lfunc_end2:
	.size	ZN12_GLOBAL__N_146_Z9FuncHADD216grid_launch_parmPiS0_S0__functor19__cxxamp_trampolineEiiiiiiPKiS2_Pi, .Lfunc_end2-ZN12_GLOBAL__N_146_Z9FuncHADD216grid_launch_parmPiS0_S0__functor19__cxxamp_trampolineEiiiiiiPKiS2_Pi

	.section	.AMDGPU.csdata
; Kernel info:
; codeLenInByte = 152
; NumSgprs: 12
; NumVgprs: 6
; FloatMode: 192
; IeeeMode: 1
; ScratchSize: 0
; LDSByteSize: 0 bytes/workgroup (compile time only)
; SGPRBlocks: 1
; VGPRBlocks: 1
; NumSGPRsForWavesPerEU: 12
; NumVGPRsForWavesPerEU: 6
; ReservedVGPRFirst: 0
; ReservedVGPRCount: 0
; COMPUTE_PGM_RSRC2:USER_SGPR: 6
; COMPUTE_PGM_RSRC2:TGID_X_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Y_EN: 0
; COMPUTE_PGM_RSRC2:TGID_Z_EN: 0
; COMPUTE_PGM_RSRC2:TIDIG_COMP_CNT: 0
	.section	.AMDGPU.config
	.text
	.globl	ZN12_GLOBAL__N_144_Z7DoHADD216grid_launch_parmPiS0_S0__functor19__cxxamp_trampolineEiiiiiiPKiS2_Pi
	.p2align	8
	.type	ZN12_GLOBAL__N_144_Z7DoHADD216grid_launch_parmPiS0_S0__functor19__cxxamp_trampolineEiiiiiiPKiS2_Pi,@function
	.amdgpu_hsa_kernel ZN12_GLOBAL__N_144_Z7DoHADD216grid_launch_parmPiS0_S0__functor19__cxxamp_trampolineEiiiiiiPKiS2_Pi
ZN12_GLOBAL__N_144_Z7DoHADD216grid_launch_parmPiS0_S0__functor19__cxxamp_trampolineEiiiiiiPKiS2_Pi: ; @ZN12_GLOBAL__N_144_Z7DoHADD216grid_launch_parmPiS0_S0__functor19__cxxamp_trampolineEiiiiiiPKiS2_Pi
	.amd_kernel_code_t
		amd_code_version_major = 1
		amd_code_version_minor = 0
		amd_machine_kind = 1
		amd_machine_version_major = 8
		amd_machine_version_minor = 0
		amd_machine_version_stepping = 3
		kernel_code_entry_byte_offset = 256
		kernel_code_prefetch_byte_size = 0
		max_scratch_backing_memory_byte_size = 0
		granulated_workitem_vgpr_count = 1
		granulated_wavefront_sgpr_count = 1
		priority = 0
		float_mode = 192
		priv = 0
		enable_dx10_clamp = 1
		debug_mode = 0
		enable_ieee_mode = 1
		enable_sgpr_private_segment_wave_byte_offset = 0
		user_sgpr_count = 6
		enable_sgpr_workgroup_id_x = 1
		enable_sgpr_workgroup_id_y = 0
		enable_sgpr_workgroup_id_z = 0
		enable_sgpr_workgroup_info = 0
		enable_vgpr_workitem_id = 0
		enable_exception_msb = 0
		granulated_lds_size = 0
		enable_exception = 0
		enable_sgpr_private_segment_buffer = 1
		enable_sgpr_dispatch_ptr = 0
		enable_sgpr_queue_ptr = 0
		enable_sgpr_kernarg_segment_ptr = 1
		enable_sgpr_dispatch_id = 0
		enable_sgpr_flat_scratch_init = 0
		enable_sgpr_private_segment_size = 0
		enable_sgpr_grid_workgroup_count_x = 0
		enable_sgpr_grid_workgroup_count_y = 0
		enable_sgpr_grid_workgroup_count_z = 0
		enable_ordered_append_gds = 0
		private_element_size = 1
		is_ptr64 = 1
		is_dynamic_callstack = 0
		is_debug_enabled = 0
		is_xnack_enabled = 0
		workitem_private_segment_byte_size = 0
		workgroup_group_segment_byte_size = 0
		gds_segment_byte_size = 0
		kernarg_segment_byte_size = 48
		workgroup_fbarrier_count = 0
		wavefront_sgpr_count = 14
		workitem_vgpr_count = 7
		reserved_vgpr_first = 0
		reserved_vgpr_count = 0
		reserved_sgpr_first = 0
		reserved_sgpr_count = 0
		debug_wavefront_private_segment_offset_sgpr = 0
		debug_private_segment_buffer_sgpr = 0
		kernarg_segment_alignment = 4
		group_segment_alignment = 4
		private_segment_alignment = 4
		wavefront_size = 6
		call_convention = 0
		runtime_loader_kernel_symbol = 0
	.end_amd_kernel_code_t
; BB#0:
	s_load_dwordx2 s[2:3], s[4:5], 0x18
	s_load_dwordx2 s[6:7], s[4:5], 0x20
	v_mov_b32_e32 v1, 0
	v_lshlrev_b64 v[3:4], 2, v[0:1]
	s_load_dwordx2 s[0:1], s[4:5], 0x28
	s_waitcnt lgkmcnt(0)
	v_add_i32_e32 v5, vcc, s2, v3
	v_mov_b32_e32 v2, s3
	v_addc_u32_e32 v6, vcc, v4, v2, vcc
	flat_load_dword v2, v[5:6]
	v_add_i32_e32 v5, vcc, s6, v3
	v_mov_b32_e32 v3, s7
	v_addc_u32_e32 v6, vcc, v4, v3, vcc
	flat_load_dword v3, v[5:6]
	v_bfrev_b32_e32 v5, 16
	s_waitcnt vmcnt(1) lgkmcnt(0)
	v_ashrrev_i32_e32 v4, 16, v2
	s_waitcnt vmcnt(0)
	v_ashrrev_i32_e32 v6, 16, v3
	;;#ASMSTART
	v_add_f16 v4, v4, v6
	;;#ASMEND
BB3_1:                                  ; =>This Inner Loop Header: Depth=1
	v_add_i32_e32 v5, vcc, -16, v5
	v_cmp_ne_u32_e32 vcc, 0, v5
	s_and_b64 vcc, exec, vcc
	s_cbranch_vccnz BB3_1
; BB#2:                                 ; %_Z7DoHADD216grid_launch_parmPiS0_S0_.exit
	;;#ASMSTART
	v_add_f16 v2, v2, v3
	;;#ASMEND
	v_lshlrev_b32_e32 v3, 16, v4
	v_and_b32_e32 v2, 0xffff, v2
	v_lshlrev_b64 v[0:1], 2, v[0:1]
	v_or_b32_e32 v4, v2, v3
	v_add_i32_e32 v2, vcc, s0, v0
	v_mov_b32_e32 v0, s1
	v_addc_u32_e32 v3, vcc, v1, v0, vcc
	flat_store_dword v[2:3], v4
	s_endpgm
.Lfunc_end3:
	.size	ZN12_GLOBAL__N_144_Z7DoHADD216grid_launch_parmPiS0_S0__functor19__cxxamp_trampolineEiiiiiiPKiS2_Pi, .Lfunc_end3-ZN12_GLOBAL__N_144_Z7DoHADD216grid_launch_parmPiS0_S0__functor19__cxxamp_trampolineEiiiiiiPKiS2_Pi

	.section	.AMDGPU.csdata
; Kernel info:
; codeLenInByte = 180
; NumSgprs: 14
; NumVgprs: 7
; FloatMode: 192
; IeeeMode: 1
; ScratchSize: 0
; LDSByteSize: 0 bytes/workgroup (compile time only)
; SGPRBlocks: 1
; VGPRBlocks: 1
; NumSGPRsForWavesPerEU: 14
; NumVGPRsForWavesPerEU: 7
; ReservedVGPRFirst: 0
; ReservedVGPRCount: 0
; COMPUTE_PGM_RSRC2:USER_SGPR: 6
; COMPUTE_PGM_RSRC2:TGID_X_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Y_EN: 0
; COMPUTE_PGM_RSRC2:TGID_Z_EN: 0
; COMPUTE_PGM_RSRC2:TIDIG_COMP_CNT: 0
	.section	.AMDGPU.config
	.text
	.globl	__threadfence
	.p2align	8
	.type	__threadfence,@function
__threadfence:                          ; @__threadfence
	.amd_kernel_code_t
		amd_code_version_major = 1
		amd_code_version_minor = 0
		amd_machine_kind = 1
		amd_machine_version_major = 8
		amd_machine_version_minor = 0
		amd_machine_version_stepping = 3
		kernel_code_entry_byte_offset = 256
		kernel_code_prefetch_byte_size = 0
		max_scratch_backing_memory_byte_size = 0
		granulated_workitem_vgpr_count = 0
		granulated_wavefront_sgpr_count = 0
		priority = 0
		float_mode = 192
		priv = 0
		enable_dx10_clamp = 1
		debug_mode = 0
		enable_ieee_mode = 1
		enable_sgpr_private_segment_wave_byte_offset = 0
		user_sgpr_count = 6
		enable_sgpr_workgroup_id_x = 1
		enable_sgpr_workgroup_id_y = 0
		enable_sgpr_workgroup_id_z = 0
		enable_sgpr_workgroup_info = 0
		enable_vgpr_workitem_id = 0
		enable_exception_msb = 0
		granulated_lds_size = 0
		enable_exception = 0
		enable_sgpr_private_segment_buffer = 1
		enable_sgpr_dispatch_ptr = 0
		enable_sgpr_queue_ptr = 0
		enable_sgpr_kernarg_segment_ptr = 1
		enable_sgpr_dispatch_id = 0
		enable_sgpr_flat_scratch_init = 0
		enable_sgpr_private_segment_size = 0
		enable_sgpr_grid_workgroup_count_x = 0
		enable_sgpr_grid_workgroup_count_y = 0
		enable_sgpr_grid_workgroup_count_z = 0
		enable_ordered_append_gds = 0
		private_element_size = 1
		is_ptr64 = 1
		is_dynamic_callstack = 0
		is_debug_enabled = 0
		is_xnack_enabled = 0
		workitem_private_segment_byte_size = 0
		workgroup_group_segment_byte_size = 0
		gds_segment_byte_size = 0
		kernarg_segment_byte_size = 0
		workgroup_fbarrier_count = 0
		wavefront_sgpr_count = 1
		workitem_vgpr_count = 1
		reserved_vgpr_first = 0
		reserved_vgpr_count = 0
		reserved_sgpr_first = 0
		reserved_sgpr_count = 0
		debug_wavefront_private_segment_offset_sgpr = 0
		debug_private_segment_buffer_sgpr = 0
		kernarg_segment_alignment = 4
		group_segment_alignment = 4
		private_segment_alignment = 4
		wavefront_size = 6
		call_convention = 0
		runtime_loader_kernel_symbol = 0
	.end_amd_kernel_code_t
; BB#0:
	s_waitcnt vmcnt(0)
	buffer_wbinvl1_vol
	s_endpgm
.Lfunc_end4:
	.size	__threadfence, .Lfunc_end4-__threadfence

	.section	.AMDGPU.csdata
; Kernel info:
; codeLenInByte = 16
; NumSgprs: 1
; NumVgprs: 1
; FloatMode: 192
; IeeeMode: 1
; ScratchSize: 0
; LDSByteSize: 0 bytes/workgroup (compile time only)
; SGPRBlocks: 0
; VGPRBlocks: 0
; NumSGPRsForWavesPerEU: 1
; NumVGPRsForWavesPerEU: 1
; ReservedVGPRFirst: 0
; ReservedVGPRCount: 0
; COMPUTE_PGM_RSRC2:USER_SGPR: 6
; COMPUTE_PGM_RSRC2:TGID_X_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Y_EN: 0
; COMPUTE_PGM_RSRC2:TGID_Z_EN: 0
; COMPUTE_PGM_RSRC2:TIDIG_COMP_CNT: 0
	.section	.AMDGPU.config
	.text
	.globl	__threadfence_block
	.p2align	8
	.type	__threadfence_block,@function
__threadfence_block:                    ; @__threadfence_block
	.amd_kernel_code_t
		amd_code_version_major = 1
		amd_code_version_minor = 0
		amd_machine_kind = 1
		amd_machine_version_major = 8
		amd_machine_version_minor = 0
		amd_machine_version_stepping = 3
		kernel_code_entry_byte_offset = 256
		kernel_code_prefetch_byte_size = 0
		max_scratch_backing_memory_byte_size = 0
		granulated_workitem_vgpr_count = 0
		granulated_wavefront_sgpr_count = 0
		priority = 0
		float_mode = 192
		priv = 0
		enable_dx10_clamp = 1
		debug_mode = 0
		enable_ieee_mode = 1
		enable_sgpr_private_segment_wave_byte_offset = 0
		user_sgpr_count = 6
		enable_sgpr_workgroup_id_x = 1
		enable_sgpr_workgroup_id_y = 0
		enable_sgpr_workgroup_id_z = 0
		enable_sgpr_workgroup_info = 0
		enable_vgpr_workitem_id = 0
		enable_exception_msb = 0
		granulated_lds_size = 0
		enable_exception = 0
		enable_sgpr_private_segment_buffer = 1
		enable_sgpr_dispatch_ptr = 0
		enable_sgpr_queue_ptr = 0
		enable_sgpr_kernarg_segment_ptr = 1
		enable_sgpr_dispatch_id = 0
		enable_sgpr_flat_scratch_init = 0
		enable_sgpr_private_segment_size = 0
		enable_sgpr_grid_workgroup_count_x = 0
		enable_sgpr_grid_workgroup_count_y = 0
		enable_sgpr_grid_workgroup_count_z = 0
		enable_ordered_append_gds = 0
		private_element_size = 1
		is_ptr64 = 1
		is_dynamic_callstack = 0
		is_debug_enabled = 0
		is_xnack_enabled = 0
		workitem_private_segment_byte_size = 0
		workgroup_group_segment_byte_size = 0
		gds_segment_byte_size = 0
		kernarg_segment_byte_size = 0
		workgroup_fbarrier_count = 0
		wavefront_sgpr_count = 1
		workitem_vgpr_count = 1
		reserved_vgpr_first = 0
		reserved_vgpr_count = 0
		reserved_sgpr_first = 0
		reserved_sgpr_count = 0
		debug_wavefront_private_segment_offset_sgpr = 0
		debug_private_segment_buffer_sgpr = 0
		kernarg_segment_alignment = 4
		group_segment_alignment = 4
		private_segment_alignment = 4
		wavefront_size = 6
		call_convention = 0
		runtime_loader_kernel_symbol = 0
	.end_amd_kernel_code_t
; BB#0:
	s_endpgm
.Lfunc_end5:
	.size	__threadfence_block, .Lfunc_end5-__threadfence_block

	.section	.AMDGPU.csdata
; Kernel info:
; codeLenInByte = 4
; NumSgprs: 1
; NumVgprs: 1
; FloatMode: 192
; IeeeMode: 1
; ScratchSize: 0
; LDSByteSize: 0 bytes/workgroup (compile time only)
; SGPRBlocks: 0
; VGPRBlocks: 0
; NumSGPRsForWavesPerEU: 1
; NumVGPRsForWavesPerEU: 1
; ReservedVGPRFirst: 0
; ReservedVGPRCount: 0
; COMPUTE_PGM_RSRC2:USER_SGPR: 6
; COMPUTE_PGM_RSRC2:TGID_X_EN: 1
; COMPUTE_PGM_RSRC2:TGID_Y_EN: 0
; COMPUTE_PGM_RSRC2:TGID_Z_EN: 0
; COMPUTE_PGM_RSRC2:TIDIG_COMP_CNT: 0

	.ident	"HCC clang version 3.5.0  (based on HCC 0.10.16481-e2b4718-6fa8481 LLVM 3.5.0svn)"
	.ident	"HCC clang version 3.5.0  (based on HCC 0.10.16481-e2b4718-6fa8481 LLVM 3.5.0svn)"
	.ident	"HCC clang version 3.5.0  (based on HCC 0.10.16481-e2b4718-6fa8481 LLVM 3.5.0svn)"
	.ident	"HCC clang version 3.5.0  (based on HCC 0.10.16481-e2b4718-6fa8481 LLVM 3.5.0svn)"
	.ident	"HCC clang version 3.5.0  (based on HCC 0.10.16481-e2b4718-6fa8481 LLVM 3.5.0svn)"
	.ident	"HCC clang version 3.5.0  (based on HCC 0.10.16481-e2b4718-6fa8481 LLVM 3.5.0svn)"
	.ident	"HCC clang version 3.5.0  (based on HCC 0.10.16481-e2b4718-6fa8481 LLVM 3.5.0svn)"
	.ident	"HCC clang version 3.5.0  (based on HCC 0.10.16481-e2b4718-6fa8481 LLVM 3.5.0svn)"
	.ident	"HCC clang version 3.5.0  (based on HCC 0.10.16481-e2b4718-6fa8481 LLVM 3.5.0svn)"
	.ident	"HCC clang version 3.5.0  (based on HCC 0.10.16481-e2b4718-6fa8481 LLVM 3.5.0svn)"
	.ident	"HCC clang version 3.5.0  (based on HCC 0.10.16481-e2b4718-6fa8481 LLVM 3.5.0svn)"
	.ident	"HCC clang version 3.5.0  (based on HCC 0.10.16481-e2b4718-6fa8481 LLVM 3.5.0svn)"
	.ident	"HCC clang version 3.5.0  (based on HCC 0.10.16481-e2b4718-6fa8481 LLVM 3.5.0svn)"
	.ident	"HCC clang version 3.5.0  (based on HCC 0.10.16481-e2b4718-6fa8481 LLVM 3.5.0svn)"
	.ident	"HCC clang version 3.5.0  (based on HCC 0.10.16481-e2b4718-6fa8481 LLVM 3.5.0svn)"
	.section	".note.GNU-stack"
